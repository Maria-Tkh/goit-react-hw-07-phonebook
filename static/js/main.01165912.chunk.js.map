{"version":3,"sources":["redux/contactsSlice.jsx","components/СontactForm/СontactForm.styled.jsx","components/СontactForm/СontactForm.jsx","components/СontactElement/ContactElement.styled.jsx","components/СontactElement/СontactElement.jsx","components/СontactList/СontactList.styled.jsx","components/СontactList/СontactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Loader/Loader.jsx","components/App.styled.jsx","components/App.jsx","redux/store.jsx","index.js"],"names":["contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","createContact","newContact","body","useFetchContactsQuery","useCreateContactMutation","useDeleteContactMutation","Form","styled","form","Input","input","Button","button","ContactForm","useState","name","setName","number","setNumber","isLoading","contacts","data","handleContact","e","currentTarget","value","onSubmit","preventDefault","some","contact","toast","htmlFor","onChange","type","pattern","title","required","disabled","Item","li","ContactElement","id","onClick","List","ul","ContactList","onDeleteContact","map","Label","label","Filter","Spinner","color","timeout","PhonebookTitle","h1","ContactTitle","h2","App","isFetching","isDeleting","filter","setFilter","target","normalizedFilter","toLowerCase","includes","getVisibleContacts","deleting","position","store","configureStore","reducer","middleware","getDefaultMiddleware","logger","devTools","process","setupListeners","dispatch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01165912.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const contactsApi = createApi({\n  reducerPath: 'contactsApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://61784fe1bb979200171ff686.mockapi.io/api/v1/',\n  }),\n  tagTypes: ['Contact'],\n  endpoints: builder => ({\n    fetchContacts: builder.query({\n      query: () => 'Contacts',\n      providesTags: ['Contact'],\n    }),\n    deleteContact: builder.mutation({\n      query: contactId => ({\n        url: `/Contacts/${contactId}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['Contact'],\n    }),\n    createContact: builder.mutation({\n      query: newContact => ({\n        url: '/Contacts',\n        method: 'POST',\n        body: newContact,\n      }),\n      invalidatesTags: ['Contact'],\n    }),\n  }),\n});\n\nexport const { useFetchContactsQuery, useCreateContactMutation, useDeleteContactMutation } =\n  contactsApi;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  // display: block;\n  margin-left: 20px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n\nexport const Button = styled.button`\n  background-color: #34b4eb;\n  border-color: #34b4eb;\n  border-radius: 4px;\n`;\n","import { useState } from 'react';\nimport { useCreateContactMutation, useFetchContactsQuery } from 'redux/contactsSlice';\nimport toast from 'react-hot-toast';\n// import Loader from 'components/Loader/Loader';\nimport { Form, Input, Button } from './СontactForm.styled';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const [createContact, { isLoading }] = useCreateContactMutation();\n  const { data: contacts } = useFetchContactsQuery();\n\n  const handleContact = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmitContact = e => {\n    e.preventDefault();\n    const contactToCheck = contacts.some(contact => contact.name === name);\n    if (contactToCheck) {\n      toast(`${name} is already in contacts`);\n      setName('');\n      setNumber('');\n      return;\n    }\n    createContact({ name, number });\n    toast(`${name} is added to contacts`);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmitContact}>\n      <label htmlFor=\"name\">\n        Name\n        <Input\n          value={name}\n          onChange={handleContact}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов.\n             Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label htmlFor=\"number\">\n        Number\n        <Input\n          value={number}\n          onChange={handleContact}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы,\n             тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <div>\n        {/* {isLoading && <Loader />} */}\n        <Button type=\"submit\" disabled={isLoading}>\n          Add contact\n        </Button>\n      </div>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  width: 300px;\n  margin: 4px;\n`;\n\nexport const Button = styled.button`\n  background-color: #34b4eb;\n  border-color: #34b4eb;\n  border-radius: 4px;\n`;\n","import PropTypes from 'prop-types';\nimport { Item, Button } from './ContactElement.styled';\n\nconst ContactElement = ({ id, name, number, onClick }) => {\n  return (\n    <Item key={id}>\n      <span>\n        {name}: {number}\n      </span>\n      <Button type=\"button\" onClick={onClick}>\n        Delete\n      </Button>\n    </Item>\n  );\n};\n\nContactElement.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ContactElement;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding-left: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport ContactElement from 'components/СontactElement/СontactElement';\nimport { List } from './СontactList.styled';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <List>\n      {contacts.map(contact => (\n        <ContactElement\n          key={contact.id}\n          name={contact.name}\n          number={contact.number}\n          onClick={() => onDeleteContact(contact.id)}\n        />\n      ))}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ),\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: block;\n  margin-left: 20px;\n`;\n","import PropTypes from 'prop-types';\n// import { useState } from 'react';\nimport { Label } from './Filter.styled';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <Label>\n      <p> Find contact by name</p>\n      <input type=\"text\" value={value} onChange={onChange} />\n    </Label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport default function Spinner() {\n  return <Loader type=\"Rings\" color=\"#00BFFF\" timeout={3000} />;\n}\n","import styled from '@emotion/styled';\n\nexport const PhonebookTitle = styled.h1`\n  margin-left: 20px;\n`;\n\nexport const ContactTitle = styled.h2`\n  margin-left: 20px;\n`;\n","import { useFetchContactsQuery, useDeleteContactMutation } from 'redux/contactsSlice';\nimport { useState } from 'react';\nimport { Toaster } from 'react-hot-toast';\nimport ContactForm from './СontactForm/СontactForm';\nimport ContactList from './СontactList/СontactList';\nimport Filter from './Filter/Filter';\nimport Loader from './Loader/Loader';\nimport { PhonebookTitle, ContactTitle } from './App.styled';\n\nconst App = () => {\n  const { data: contacts, isFetching } = useFetchContactsQuery();\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  // toast('contact is deleted')\n\n  const [filter, setFilter] = useState('');\n  const changeFilter = e => {\n    setFilter(e.target.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  };\n  // const visibleContacts = getVisibleContacts();\n\n  return (\n    <div>\n      <PhonebookTitle>Phonebook</PhonebookTitle>\n      <ContactForm />\n      <ContactTitle>Contacts</ContactTitle>\n      <Filter value={filter} onChange={changeFilter} />\n      {isFetching && <Loader />}\n      {contacts && (\n        <ContactList\n          contacts={getVisibleContacts()}\n          onDeleteContact={deleteContact}\n          deleting={isDeleting}\n        />\n      )}\n      <Toaster position=\"top-right\" />\n    </div>\n  );\n};\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { setupListeners } from '@reduxjs/toolkit/query';\nimport logger from 'redux-logger';\nimport { contactsApi } from './contactsSlice';\n\nexport const store = configureStore({\n  reducer: {\n    [contactsApi.reducerPath]: contactsApi.reducer,\n  },\n  middleware: getDefaultMiddleware => [...getDefaultMiddleware(), contactsApi.middleware, logger],\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nsetupListeners(store.dispatch);\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './components/App';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}